% master.m template (or master.m with replaced fields) for Kilosort (version 1)
% see https://github.com/cortex-lab/KiloSort
% fields with brackets should be replaced by the make_kilo_scripts function in pipefinch.neural.sort.kilo.core

% default options are in parenthesis after the comment

% add to path the kilo_dir and npymat_dir
addpath(genpath('${kilo_dir}'))
addpath(genpath('${npy_matdir}'))

% This part adds paths
disp(('${kilo_dir}'))
addpath(('${kilo_dir}')) % path to kilosort folder

% setup configuration
pathToYourConfigFile = ('${data_dir}');
run(fullfile(pathToYourConfigFile, 'config.m'))

tic; % start timer
%
if ops.GPU     %defined in config.m
    gpuDevice(1); % initialize GPU (will erase any existing GPU arrays)
end

if strcmp(ops.datatype , 'openEphys')
   ops = convertOpenEphysToRawBInary(ops);  % convert data, only for OpenEphys
end
%
[rez, DATA, uproj] = preprocessData(ops); % preprocess data and extract spikes for initialization
rez                = fitTemplates(rez, DATA, uproj);  % fit templates iteratively
rez                = fullMPMU(rez, DATA);% extract final spike times (overlapping extraction)

% AutoMerge. rez2Phy will use for clusters the new 5th column of st3 if you run this)
automerge = ${auto_merge};
if automerge == 1
    fprintf('Will do automerge\n')
    rez = merge_posthoc2(rez);
    fprintf('Done with automerge\n')
end

% save matlab results file
%save(fullfile(ops.root,  'rez.mat'), 'rez', '-v7.3');

% save python results file for Phy
rezToPhy(rez, ops.root);
fprintf('Saved results to Phy format\n')

% remove temporary file
delete(ops.fproc);
fprintf('Removed temporary files\n')